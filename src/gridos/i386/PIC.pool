/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace gridos::i386;

use sys::core::Object;
use sys::core::utils::Bitset;

class PIC extends Object {

    int TIMER := 0;
    int KEYBOARD := 1;
    
    int mask;
    
    [] __init() {
        /* initialize PICs */
        IOPort:outb(0x20, 0x11);
        IOPort:outb(0xa0, 0x11);
        IOPort:outb(0x21, 0x20);
        IOPort:outb(0xa1, 0x28);
        IOPort:outb(0x21, 0x04);
        IOPort:outb(0xa1, 0x02);
        IOPort:outb(0x21, 0x01);
        IOPort:outb(0xa1, 0x01);
        
        this._storeMask(0xfffb);
    }
    
    [] activate(int nr) {
        this._storeMask(Bitset:unset(mask, nr));
    }
    
    [] deactivate(int nr) {
        this._storeMask(Bitset:set(mask, nr));
    }
    
    [] finalize(int nr) {
        if (nr < 0)  { /* ignore < 0 */ return; }
        if (nr < 8)  { IOPort:outb(0x20, 0x60 + nr); return; }
        if (nr < 16) { IOPort:outb(0x20, 0x62); IOPort:outb(0xa0, 0x60 + (nr / 8)); return; }
        /* ignore >= 16 */ 
    }
    
    [] _storeMask(int mask) {
        IOPort:outb(0xa1, mask / 8);
        IOPort:outb(0x21, mask);
        this.mask = mask;
    }
}

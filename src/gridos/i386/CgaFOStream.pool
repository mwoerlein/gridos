/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
*/
namespace gridos::i386;

use sys::stream::FOStream;
use sys::stream::OStream;

class CgaFOStream extends FOStream {
    
    int DEFAULT_FORMAT := 7;
     
    CgaScreen screen;
    int format;
    
    [OStream] initOStream(CgaScreen screen) {
        this.screen = screen;
        return this.ostream();
    }
    
    [FOStream] printFChar(int c, int fg, int bg) {
        screen.drawChar(c, this._format(fg, bg));
        return this.fostream();
    }
    
    [int] _format(int fg, int bg) {
        int f = 16 * this._color(bg, 0) + this._color(fg, DEFAULT_FORMAT);
        if (fg >= 10 || bg >= 10) { f += 8; } // bright
        return f;
    }
    
    [int] _color(int foColor, int defaultFormat) {
        if (foColor == FOStream:DEFAULT) { return defaultFormat; }
        int base = foColor % 10;
        if (base == FOStream:BLACK) { return 0; }
        else if (base == FOStream:RED) { return 4; }
        else if (base == FOStream:GREEN) { return 2; }
        else if (base == FOStream:YELLOW) { return 6; }
        else if (base == FOStream:BLUE) { return 1; }
        else if (base == FOStream:MAGENTA) { return 5; }
        else if (base == FOStream:CYAN) { return 3; }
        else if (base == FOStream:WHITE) { return 7; }
        return defaultFormat;
    }
}

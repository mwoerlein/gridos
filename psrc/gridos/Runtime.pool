/*[meta]
mimetype = text/x-pool
author = Marc Woerlein <marc.woerlein@gmx.de>
version = 0.1.0
[pool]
bootstrap = bootstrap
bootstrap2 = gridos::Runtime:bootstrap(int, int)
*/
namespace gridos;

use sys::core::Class;
use sys::core::Object;
use sys::core::OStream;
use sys::core::Runtime as CoreRuntime;

use gridos::i386::CgaScreen;

class Runtime extends CoreRuntime {
    
    // TODO: remove with syscall
    // SysCall constants
    int SysCall_allocate := 1;
    int SysCall_free := 2;
    int SysCall_find_class := 3;
    int SysCall_print := 4;
    
    // TODO: remove with syscall
    // SysCall print kinds
    int spk_char := 0;
    int spk_int := 1;
    int spk_hex := 2;
    int spk_string := 3;
    
    // TODO: remove with working global method calls
    int _instantiateBootstrap := 48;
    // TODO: remove with working ClassHeader "struct"
    int ch_mdt := 20;
    int ch_tpl_size := 28;
    
    // variables
    // TODO: remove after real pool implementation exists
    int syscall_runtime;
    int syscall_entry;
    
    // methods
    global [CoreRuntime] bootstrap(int syscall_runtime, int syscall_entry) {
        
        // get class descriptors
        // TODO: replace int with working ClassHeader "struct"
        int cdClass = 0;
        __pasm__(<"
            pushl 0; pushl %eax; pushl _gridos_Runtime_coi_SysCall_find_class
            pushl %esp; pushl %edi; call %esi
            addl 16, %esp; popl %eax
        ">, {"%eax": Class:CLASSNAME, "%edi": syscall_runtime, "%esi": syscall_entry}, {"%eax": cdClass});
        if (!cdClass) { return null; } // abort on initialization error
        
        // TODO: replace int with working ClassHeader "struct"
        int cdRuntime = 0;
        __pasm__(<"
            pushl 0; pushl %eax; pushl _gridos_Runtime_coi_SysCall_find_class
            pushl %esp; pushl %edi; call %esi
            addl 16, %esp; popl %eax
        ">, {"%eax": Runtime:CLASSNAME, "%edi": syscall_runtime, "%esi": syscall_entry}, {"%eax": cdRuntime} );
        if (!cdRuntime) { return null; } // abort on initialization error

        // allocate spaces
        // TODO: replace int with working MemInfo "struct"
        int icClass = 0;
        __pasm__(<"
            pushl 0
            pushl _gridos_Runtime_coi_ch_tpl_size(%eax) // instance size
            pushl _gridos_Runtime_coi_SysCall_allocate
            pushl %esp; pushl %edi; call %esi
            addl 16, %esp; popl %eax
        ">, {"%eax": cdClass, "%edi": syscall_runtime, "%esi": syscall_entry}, {"%eax": icClass});
        if (!icClass) { return null; } // abort on initialization error

        // TODO: replace int with working MemInfo "struct"
        int irt = 0;
        __pasm__(<"
            pushl 0
            pushl _gridos_Runtime_coi_ch_tpl_size(%eax) // instance size
            pushl _gridos_Runtime_coi_SysCall_allocate
            pushl %esp; pushl %edi; call %esi
            addl 16, %esp; popl %eax
        ">, {"%eax": cdRuntime, "%edi": syscall_runtime, "%esi": syscall_entry}, {"%eax": irt});
        if (!irt) { return null; } // abort on initialization error

        Runtime rt = null;
        Class cClass = null;
        // TODO: [rt, cClass] = CoreRuntime:_instantiateBootstrap(irt, cdRuntime, icClass, cdClass);
        __pasm__(<"
            subl 8, %esp // ret
            pushl %edx; pushl %ecx; pushl %ebx; pushl %eax // args
            movl 8(%ebp), %eax; movl _118ac840_cto_d67a0794(%eax), %eax // @class-desc "CoreRuntime"
            movl %eax, %ebx; addl _gridos_Runtime_coi_ch_mdt(%eax), %ebx;
            movl _gridos_Runtime_coi__instantiateBootstrap(%ebx), %ebx // get method offset
            addl %eax, %ebx // @func
            pushl 0; pushl %eax; call %ebx // call global func
            addl 24, %esp; popl %eax; popl %ebx
        ">, {"%eax": irt, "%ebx": cdRuntime, "%ecx": icClass, "%edx": cdClass}, {"%eax": rt, "%ebx": cClass});
        
        rt.initSysCall(syscall_runtime, syscall_entry);
        return rt._finalizeBootstrap(cClass, cdClass, cdRuntime);
    }
    
    [] initSysCall(int syscall_runtime, int syscall_entry) {
        this.syscall_runtime = syscall_runtime;
        this.syscall_entry = syscall_entry;
    }
    
    // TODO #7: move to constructor with (implicit) parent calls
    [] __init() {
    //*/
        RuntimeOStream rs0 = this.createInstance(RuntimeOStream:CLASSNAME);
        this.setOut(rs0.initOStream(this, 0));
        RuntimeOStream rs1 = this.createInstance(RuntimeOStream:CLASSNAME);
        this.setErr(rs1.initOStream(this, 1));
    /*/
        CgaScreen screen = this.createInstance(CgaScreen:CLASSNAME);
        screen.init();
        this.setOut(screen.getFormattedOStream(7));
        this.setErr(screen.getFormattedOStream(12));
    //*/
    }
    
    // TODO: replace int with working ClassHeader "struct"
    // TODO: replace cstring with working String class
    [int] getClassDesc(cstring name) {
        int classDesc = 0;
        __pasm__(<"
            pushl 0; pushl %eax; pushl _gridos_Runtime_coi_SysCall_find_class
            pushl %esp; pushl %edi; call %esi
            addl 16, %esp; popl %eax
        ">, {"%eax": name, "%edi": syscall_runtime, "%esi": syscall_entry}, {"%eax": classDesc});
        return classDesc;
    }
    
    // TODO: replace int with working MemInfo "struct"
    [int] allocate(int size) {
        // TODO: replace int with working MemInfo "struct"
        int info = 0;
        __pasm__(<"
            pushl 0; pushl %eax; pushl _gridos_Runtime_coi_SysCall_allocate
            pushl %esp; pushl %edi; call %esi
            addl 16, %esp; popl %eax
        ">, {"%eax": size, "%edi": syscall_runtime, "%esi": syscall_entry}, {"%eax": info});
        return info;
    }
    
    // TODO: replace int with working MemInfo "struct"
    [] free(int info) {
        __pasm__(<"
            pushl %eax; pushl 0; pushl _gridos_Runtime_coi_SysCall_free
            pushl %esp; pushl %edi; call %esi
            addl 20, %esp
        ">, {"%eax": info, "%edi": syscall_runtime, "%esi": syscall_entry});
    }
    
    [] printChar(int c, int stream) {
        __pasm__(<"
            pushl %eax; pushl _gridos_Runtime_coi_spk_char; pushl %ebx; pushl _gridos_Runtime_coi_SysCall_print
            pushl %esp; pushl %edi; call %esi
            addl 24, %esp
        ">, {"%eax": c, "%ebx": stream, "%edi": syscall_runtime, "%esi": syscall_entry});
    }
    
}
